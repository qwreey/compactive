const t=window,e=t.REFS={},r="assignedElements",o="startsWith",n="querySelector",s=n+"All",l="shadowRoot",i="observedAttributes",a="getAttribute",u="slice",f="%s",c="%t",d="%a",m="%c",h="%i",b="data-",p="cloneNode",y="append",g=null,A={mode:"open"},E=new Uint8Array(12),w=()=>(crypto.getRandomValues(E),"r:"+E.toHex()),v=t.parseAttr=t=>{if(t===g)return g;if("true"==t)return!0;if("false"==t)return!1;let r=t.match(/^(.):/)?.[1],o;return"r"==r?e[t]:(o=t[u](2),"s"==r?o:"e"==r?eval(o):"i"==r||"f"==r?+o:void 0)},S=t.toAttr=t=>{let r,o=typeof t;return t===g?"":"string"==o?"s:"+t:"number"==o?(Number.isInteger(t)?"i:":"f:")+t:"boolean"==o?t+[]:(e[r=w()]=t,r)},C=new DOMParser,j=t.html=t=>C.parseFromString(`<body>${t.join()}</body>`,"text/html");let x,R;t.css=t=>j([`<style>${t.join()}</style>`]),t.Init=(e,r)=>{let o,s,l={attr(...t){for(s of t){let t=b+s;Object.defineProperty(e.prototype,s,{get(){return v(this[a](t))},set(e){this.setAttribute(t,S(e))}}),e[i].push(t)}return l},tag:t=>(o=t,l),content:t=>(e[c]=t[n]("body>*"),l),style:t=>(e[m]=t[n]("style"),l)};e[i]=[],r(l),e[c]??=document[n]("template#"+o).content,e[m]&&e[c][y](e[m]),t.customElements.define(o,e)},t.BaseElement=class extends HTMLElement{constructor(t){super();let e,o,n,i=this,u=i.constructor,m=u[c];if(!u[h]){for(e of(u[h]=!0,o=m.firstElementChild,x??=document[s]("[-global]")))m.insertBefore(e[p](!0),o);for(e of R??=document[s]("[-override]"))m[y](e[p](!0))}for(e of(i.attachShadow(A)[y](m[p](!0)),i[l][s]("[-ref]")))i[e[a]("-ref")]=e;for(e of(i[d]={},i[f]={},i[l][s]("slot"))){i[f][n=e.name||"default"]=e;let t=i[n+"Slot"];t&&(e.onslotchange=o=>t.call(i,e[r](),o))}if(t)for(e in t)i[e]=t[e]}attributeChangedCallback(t,r,n){let s,l,i=this;t[o](b)&&(t=t[u](5),r?.[o]("r:")&&delete e[r],l=v(n),s=i[t+"Attr"],s&&s.call(i,l,i[d][t]),i[d][t]=l)}slot(t){return this[f][t][r]()}emit(t,e){this.dispatchEvent(new CustomEvent(t,e))}};